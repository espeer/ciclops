/*
 * DataSetDialog.java
 *
 * Created on April 5, 2004, 11:33 AM
 */

package za.ac.up.cs.cirg.ciclops.client;

import java.awt.Frame;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import za.ac.up.cs.cirg.ciclops.model.BrowserItem;
import za.ac.up.cs.cirg.ciclops.model.DataSetModel;
import za.ac.up.cs.cirg.ciclops.services.DataSetEditor;

/**
 *
 * @author  espeer
 */
public class DataSetDialog extends javax.swing.JDialog {
    
    /** Creates new form DataSetDialog */
    public DataSetDialog(java.awt.Frame parent, boolean modal, BrowserItem selected) {
        super(parent, modal);
        initComponents();
        
        this.parent = parent;
        
        try {
            editor = ServerContext.instance().getDataSetEditorHome().create();
            if (selected.getType() == BrowserItem.TYPE_CATEGORY) {
                model = new DataSetModel();
                model.setCategory(selected);
            }
            else {
                model = editor.getDataSet(selected.getId());
            }
        }
        catch (Exception ex) {
            throw new UnexpectedError(ex);
        }
        populateFormFromModel();
    }
    
    private void populateFormFromModel() {
        id.setText(String.valueOf(model.getId()));
        category.setText(model.getCategory().getPath());
        name.setText(model.getName());
        description.setText(model.getDescription());
        try {
            if (model.getData() != null) {
                preview.setText(new String(model.getData(), 0, model.getData().length, "UTF-8"));
            }
        }
        catch (UnsupportedEncodingException ex) { }
    }
    
    private void populateModelFromForm() {
        model.setName(name.getText());
        model.setDescription(description.getText());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        category = new javax.swing.JTextField();
        selectCategory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        preview = new javax.swing.JTextArea();
        read = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        permissions = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel6.setText("Category:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        category.setEditable(false);
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 240, -1));

        selectCategory.setText("...");
        selectCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCategoryActionPerformed(evt);
            }
        });

        getContentPane().add(selectCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 20, 20));

        jLabel1.setText("Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, 20));

        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 240, -1));

        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        getContentPane().add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, -1, -1));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        getContentPane().add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, -1, -1));

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder("Description"));
        jScrollPane1.setViewportView(description);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 620, 60));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 640, 90));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Data Preview"));
        preview.setEditable(false);
        jScrollPane2.setViewportView(preview);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 20, 610, 200));

        read.setText("Read from file");
        read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readActionPerformed(evt);
            }
        });

        jPanel2.add(read, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        save.setText("Save to file");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jPanel2.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 640, 270));

        jLabel4.setText("Id:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, 20));

        id.setEditable(false);
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 80, -1));

        permissions.setText("Permissions");
        permissions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permissionsActionPerformed(evt);
            }
        });

        getContentPane().add(permissions, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, -1, -1));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, -1));

        pack();
    }//GEN-END:initComponents

    private void permissionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permissionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permissionsActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    	if (JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this data set?", "Delete Data Set", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
    		try {
    			editor.deleteDataSet(model.getId());
    			closeDialog(null);
    		}
    		catch (Exception ex) {
    			throw new UnexpectedError(ex);
    		}
    	}

    }//GEN-LAST:event_deleteActionPerformed

    private void selectCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCategoryActionPerformed
       	BrowserDialog selector = new BrowserDialog(parent, true, BrowserItem.TYPE_CATEGORY);
    	selector.show();
    	BrowserItem item = selector.getSelected();
    	if (item != null) {
    		model.setCategory(item);
    		category.setText(item.getPath());
    	}
    }//GEN-LAST:event_selectCategoryActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
    	closeDialog(null);
    }//GEN-LAST:event_cancelActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        populateModelFromForm();
        try {
            editor.saveDataSet(model);
        }
        catch (Exception ex) {
            throw new UnexpectedError(ex);
        }
        finally {
        	closeDialog(null);
        }
    }//GEN-LAST:event_okActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    	JFileChooser chooser = new JFileChooser();
    	if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
    		try {
    			// ByteArrayInputStream is = new ByteArrayInputStream(model.getData());
    			BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(chooser.getSelectedFile()));
    			
    			
    			//byte[] buffer = new byte[1024];
    			//int len = 0;
    			//while ((len = is.read(buffer, 0, buffer.length)) != -1) {
    			//	os.write(buffer, 0, len);
    			//}
    			os.write(model.getData());
    			os.close();
    		}
    		catch (IOException ex) {
    			JOptionPane.showMessageDialog(this, ex.getMessage());
    		}
    	}
    }//GEN-LAST:event_saveActionPerformed

    private void readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readActionPerformed
    	JFileChooser chooser = new JFileChooser();
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
        	try {
        		BufferedInputStream is = new BufferedInputStream(new FileInputStream(chooser.getSelectedFile()));
        		byte[] buffer = new byte[1024];
        		int len = 0;
				ByteArrayOutputStream os = new ByteArrayOutputStream();
				while ((len = is.read(buffer, 0, buffer.length)) != -1) {
					os.write(buffer, 0, len);
				}
				model.setData(os.toByteArray());
				try {
		            if (model.getData() != null) {
		                preview.setText(new String(model.getData(), 0, model.getData().length, "UTF-8"));
		            }
		        }
		        catch (UnsupportedEncodingException ex) { }
        	}
        	catch (IOException ex) {
    			JOptionPane.showMessageDialog(this, ex.getMessage());
        	}
        }
    	
    }//GEN-LAST:event_readActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField category;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea description;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField name;
    private javax.swing.JButton ok;
    private javax.swing.JButton permissions;
    private javax.swing.JTextArea preview;
    private javax.swing.JButton read;
    private javax.swing.JButton save;
    private javax.swing.JButton selectCategory;
    // End of variables declaration//GEN-END:variables
    
    private DataSetEditor editor;
    private DataSetModel model;
    private Frame parent;
}
